{
  "hash": "282a889c316fa4db59470e0d38066458",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Philadelphia Housing Model - Technical Appendix\"\nauthor: \"AKH Consultants - Annalise Abraham, Katie Knox, and Hope Levin\"\nformat: \n  html:\n    code-fold: show\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  echo: true          # show code in output\n  cache: true         # cache all chunks by default\n  workspace: retain   # use the global R environment\neditor: \n  markdown: \n    wrap: 72\n---\n\n# PHASE 1: DATA PREPARATION\n\n## Load Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.2\n✔ ggplot2   4.0.0     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tigris)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidycensus)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /Users/hope/Documents/GitHub/portfolio-setup-hlevin13/assignments/midterm\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(units)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nudunits database from /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/units/share/udunits/udunits2.xml\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(stargazer)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nPlease cite as: \n\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lmtest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: zoo\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\nlibrary(ggfortify)\n```\n:::\n\n\n## Clean Property Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproperty_sales <- st_read(\"https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `opa_properties_public' from data source \n  `https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv' \n  using driver `CSV'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n```\n\n\n:::\n\n```{.r .cell-code}\nproperty_sales_res <- property_sales %>% filter(str_detect(zoning, \"^R\") | str_detect(zoning, \"IRMX\")) %>% filter(str_detect(category_code_description, \"SINGLE FAMILY\") | str_detect(category_code_description, \"MULTI FAMILY\") | str_detect(category_code_description, \"MIXED USE\")) %>% mutate(sale_price_n = as.numeric(sale_price)) %>% filter(sale_price_n < 10000000) %>% filter(sale_date >= as.Date(\"2023-01-01\") & sale_date <= as.Date(\"2024-12-31\") )\n\nproperty_sales_res <- property_sales_res %>% filter(sale_price_n<10000000 & sale_price_n > 5000)\n\nggplot(property_sales_res, aes(x = sale_date, y = sale_price_n)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(property_sales_res, aes(x = number_of_bedrooms, y = sale_price_n)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#Converting blank cells to NA \ncolSums(property_sales_res == \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                         4454                           451 \n                book_and_page                 building_code \n                            2                            12 \n    building_code_description                 category_code \n                           15                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                         4993                         27357 \n      date_exterior_condition                         depth \n                        27357                           187 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                           11                           944 \n                     frontage                          fuel \n                          189                          8761 \n                garage_spaces                   garage_type \n                         1088                         10974 \n         general_construction               geographic_ward \n                          244                             0 \n          homestead_exemption               house_extension \n                            0                         26867 \n                 house_number            interior_condition \n                            0                            12 \n                     location             mailing_address_1 \n                            0                          3528 \n            mailing_address_2               mailing_care_of \n                        27357                         27347 \n           mailing_city_state                mailing_street \n                           63                           260 \n                  mailing_zip                  market_value \n                           88                             0 \n            market_value_date           number_of_bathrooms \n                        27357                          1038 \n           number_of_bedrooms               number_of_rooms \n                          232                         25771 \n               number_stories               off_street_open \n                          135                           326 \n               other_building                       owner_1 \n                        27330                             0 \n                      owner_2                 parcel_number \n                        18840                             0 \n                 parcel_shape                 quality_grade \n                           35                          1046 \n               recording_date               registry_number \n                            0                           106 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                        25361                         23810 \n                    site_type                    state_code \n                        27357                            62 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                        17229                             0 \n                       suffix              taxable_building \n                        27339                             0 \n                 taxable_land                    topography \n                            0                           478 \n                   total_area            total_livable_area \n                            6                             9 \n                  type_heater                    unfinished \n                         3738                         27357 \n                         unit                       utility \n                        25513                         27357 \n                    view_type                    year_built \n                          178                             9 \n          year_built_estimate                      zip_code \n                         5659                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                           39                          1676 \n                        shape                  sale_price_n \n                            0                             0 \n```\n\n\n:::\n\n```{.r .cell-code}\nproperty_sales_res <- as.data.frame(lapply(property_sales_res, function(x) { \n  x <- trimws(x) # remove leading/trailing spaces x[x == \"\"] <- NA \n  return(x) }))\n\ncolSums(is.na(property_sales_res))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                            0                             0 \n                book_and_page                 building_code \n                            0                             0 \n    building_code_description                 category_code \n                            0                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                            0                             0 \n      date_exterior_condition                         depth \n                            0                             0 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                            0                             0 \n                     frontage                          fuel \n                            0                             0 \n                garage_spaces                   garage_type \n                            0                             0 \n         general_construction               geographic_ward \n                            0                             0 \n          homestead_exemption               house_extension \n                            0                             0 \n                 house_number            interior_condition \n                            0                             0 \n                     location             mailing_address_1 \n                            0                             0 \n            mailing_address_2               mailing_care_of \n                            0                             0 \n           mailing_city_state                mailing_street \n                            0                             0 \n                  mailing_zip                  market_value \n                            0                             0 \n            market_value_date           number_of_bathrooms \n                            0                             0 \n           number_of_bedrooms               number_of_rooms \n                            0                             0 \n               number_stories               off_street_open \n                            0                             0 \n               other_building                       owner_1 \n                            0                             0 \n                      owner_2                 parcel_number \n                            0                             0 \n                 parcel_shape                 quality_grade \n                            0                             0 \n               recording_date               registry_number \n                            0                             0 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                            0                             0 \n                    site_type                    state_code \n                            0                             0 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                            0                             0 \n                       suffix              taxable_building \n                            0                             0 \n                 taxable_land                    topography \n                            0                             0 \n                   total_area            total_livable_area \n                            0                             0 \n                  type_heater                    unfinished \n                            0                             0 \n                         unit                       utility \n                            0                             0 \n                    view_type                    year_built \n                            0                             0 \n          year_built_estimate                      zip_code \n                            0                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                            0                             0 \n                        shape                  sale_price_n \n                            0                             0 \n```\n\n\n:::\n:::\n\n\n## Load Census Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncensus_api_key(\"5a82e243438bea307ae1c04f150d539c4db5fa47\", install = FALSE) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n```\n\n\n:::\n\n```{.r .cell-code}\nphiladelphia <- get_acs( geography = \"tract\", county = \"Philadelphia\", state = \"PA\", variables = c(median_h_income = \"B19013_001\", total_population = \"B01003_001\"), survey = \"acs5\", year = 2023, output = \"wide\", geometry = TRUE )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2019-2023 5-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |===============================================================       |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n:::\n\n\n## Data Cleaning Summary:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make Summary tables showing before and after data cleaning\n\nbefore_summary <- tibble( Summary = \"Raw data\", Rows = nrow(property_sales), Columns = ncol(property_sales) )\n\nafter_summary <- tibble( Summary = \"Cleaned data\", Rows = nrow(property_sales_res), Columns = ncol(property_sales_res) )\n\n# Combine into one summary table\n\nsummary_table <- bind_rows(before_summary, after_summary)\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  Summary        Rows Columns\n  <chr>         <int>   <int>\n1 Raw data     583776      79\n2 Cleaned data  27357      80\n```\n\n\n:::\n:::\n\n\n## **Data Cleaning Narrative:**\n\nThe dataset initially had 583,776 properties. First we filtered\nproperties based on their zoning code, only keeping those which were\nresidential or 'IRMX,' meaning Industrial Residential Mixed Use. #Then\nto further ensure that we had only residential entries, we filtered for\nentries that had a category code of single family, multi family, or\nmixed use. To remove any egregious outliers we removed properties whose\nsale price was less than \\$5000 or greater than \\$10000000. Finally, we\nonly kept sales that occurred in 2023 or 2024. Blank cells were recoded\nas 'NA.'The cleaned dataset had 27357 lines.\n\n## Load Spatial Amenities Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npark_properties <- st_read(\"https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PPR_Properties' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 504 features and 25 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -75.28353 ymin: 39.87117 xmax: -74.95865 ymax: 40.13186\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals <- st_read(\"https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `8325e3d0-cbe5-4899-a21f-aa0870da62172020329-1-y8qn03.5pgx' from data source `https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 36 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.23027 ymin: 39.92185 xmax: -74.98149 ymax: 40.07901\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nfarmers_markets <- st_read(\"https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Farmers_Markets' from data source \n  `https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 28 features and 53 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.22686 ymin: 39.92713 xmax: -75.07622 ymax: 40.07898\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nschools <- st_read(\"https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Schools' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 495 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2665 ymin: 39.90781 xmax: -74.97057 ymax: 40.12974\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nlandmarks <- st_read(\"https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Landmark_Points' from data source \n  `https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 1147 features and 20 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.28169 ymin: 39.85929 xmax: -74.96915 ymax: 40.11991\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nbike_network <- st_read(\"https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Bike_Network' from data source \n  `https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 5225 features and 8 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -75.26927 ymin: 39.87528 xmax: -74.96572 ymax: 40.124\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Transform data to sf objects, and match all CRS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(property_sales_res) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System: NA\n```\n\n\n:::\n\n```{.r .cell-code}\nproperty_sales_res$geometry <- st_as_sfc(property_sales_res$shape) \nres_properties_sf <- st_sf(property_sales_res)\n\n# Transform CRS for Spatial Amenities - to match that of the property sales data\n\npark_properties <- st_transform(park_properties, st_crs(res_properties_sf)) \nhospitals <- st_transform(hospitals, st_crs(res_properties_sf)) \nfarmers_markets <- st_transform(farmers_markets, st_crs(res_properties_sf)) \nschools <- st_transform(schools, st_crs(res_properties_sf)) \nlandmarks <- st_transform(landmarks, st_crs(res_properties_sf)) \nbike_network <- st_transform(bike_network, st_crs(res_properties_sf))\n\n# Transform census data CRS - to match that of the property sales data\n\nst_crs(philadelphia) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n\n\n:::\n\n```{.r .cell-code}\nphiladelphia <- st_transform(philadelphia, st_crs(res_properties_sf))\n```\n:::\n\n\n## Join census data to property sales data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphiladelphia <- philadelphia %>%\n  mutate(census_tract = as.numeric(str_extract(NAME, \"(?<=Census Tract )\\\\d+(\\\\.\\\\d+)?\")))\n\nres_properties_sf <- st_join(res_properties_sf, philadelphia %>% select(median_h_incomeE, total_populationE), left = TRUE)\n```\n:::\n\n\n## Join Spatial Amenities Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#1 Join parks data - What is the distance to the nearest park?**\n\n# Note that some of the parks are super tiny! It also includes playgrounds and rec centers, etc\n\n# Calculate distance matrix (properties to parks)\n\ndist_matrix_parks <- st_distance(res_properties_sf, park_properties)\n\n# Function to get mean distance to k nearest neighbors\n\npark_distance <- function(dist_matrix_parks, k) {\n  apply(dist_matrix_parks, 1, function(distances) { \n    # Sort distances and take the first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest park distance as a column\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_park = park_distance(dist_matrix_parks, k = 1))\n\n#2 Join hospitals data - What is the distance to the nearest hospital?\n\n# Calculate distance matrix (properties to hospitals)\n\ndist_matrix_hospitals <- st_distance(res_properties_sf, hospitals)\n\n# Function to get mean distance to k nearest neighbors\n\nhosp_distance <- function(dist_matrix_hospitals, k) {\n  apply(dist_matrix_hospitals, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate the average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest hospital distance as a column\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_hospital = hosp_distance(dist_matrix_hospitals, k = 1))\n\n#hospital distance in miles \nres_properties_sf <- res_properties_sf %>% mutate( nearest_hospital_mi = nearest_hospital/5280 )\n\n#3 Join farmers market data - what is the distance to the nearest farmers market?\n\n# Calculate distance matrix (properties to farmers markets)\n\ndist_matrix_market <- st_distance(res_properties_sf, farmers_markets)\n\n# Function to get nearest distance\n\nmarket_distance <- function(dist_matrix_market, k) {\n  apply(dist_matrix_market, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf <- res_properties_sf %>% mutate(nearest_fmarket = market_distance(dist_matrix_market, k = 1))\n\n# market distance in miles\n\nres_properties_sf <- res_properties_sf %>% mutate(nearest_fmarket_mi = nearest_fmarket/5280)\n\n#4 Join landmark data - what is the distance to the nearest landmark?\n\n# Calculate distance matrix (properties to landmarks)\n\ndist_matrix_landmark <- st_distance(res_properties_sf, landmarks)\n\n# Function to get nearest distance\n\nlandmark_distance <- function(dist_matrix_landmark, k) {\n  apply(dist_matrix_landmark, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate their mean\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest landmark distance as a column\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_landmark = landmark_distance(dist_matrix_landmark, k = 1))\n\n# landmark distance in miles\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_landmark_mi = nearest_landmark/5280 )\n\n#5 Join school data - what is the distance to the nearest school?\n\n# Calculate distance matrix (properties to schools)\n\ndist_matrix_school <- st_distance(res_properties_sf, schools)\n\n# Function to get nearest distance\n\nschool_distance <- function(dist_matrix_school, k) {\n  apply(dist_matrix_school, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_school = school_distance(dist_matrix_school, k = 1))\n\n# market distance in miles\n\nres_properties_sf <- res_properties_sf %>% mutate( nearest_school_mi = nearest_school/5280 )\n```\n:::\n\n\n# PHASE 2: EXPLORATORY DATA ANALYSIS - DATA VISUALIZATIONS\n\n## **#1 Geographic Distribution (Map)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>% mutate(sale_price_n = as.numeric(sale_price_n))\n\n# Map of Sale Prices\n\nggplot(res_properties_sf) + geom_sf(aes(color = sale_price_n), size = 1, alpha = 0.7) + scale_color_viridis_c(option = \"turbo\", labels = scales::dollar) + labs( title = \"Distribution of Sale Prices in Philadelphia\", color = \"Home Price\" ) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThis map visualizes residential property sales across Philadelphia\nduring 2023–2024, with each point representing a single sale and color\nindicating the sale price. The full range of values is very hard to see\non this map because while there is a large range of values, going beyond\n\\$8 million, most of them fall on the much lower end of the spectrum.\nThis causes the map to appear mostly one uniform shade of navy blue. A\nnumber of higher valued properties (shown in light blue and representing\nhomes just under \\$2 million) can be seen clustered in northwest\nPhiladelphia and around center city.\n\n### **Map of Sale Prices - Log Transformed**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + geom_sf(data = philadelphia, fill = \"gray95\", color = \"white\") + geom_sf(data = res_properties_sf, aes(color = log10(sale_price_n)), size = 1.5, alpha = 0.7) + scale_color_viridis_c( option = \"plasma\", labels = function(x) dollar(10^x), name = \"Sale Price (log scale)\" ) + labs( title = \"Residential Property Sale Prices in Philadelphia\", subtitle = \"Log-scaled price visualization\", caption = \"Data: Property Sales from 2023, 2024\" ) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThis map visualizes residential property sales across Philadelphia\nduring 2023–2024, with each point representing a single sale and color\nindicating the sale price on a logarithmic scale. Using a log scale\nallows for clearer visualization of the wide range of property values,\ncompressing extremely high prices while preserving overall spatial\nvariation. The pattern reveals clear geographic differences in housing\nmarkets: higher sale prices (yellow to orange) are concentrated in\ncentral and northwestern neighborhoods—such as Center City, University\nCity, and Chestnut Hill—while lower prices (purple) are more common in\nmuch of North and Southwest Philadelphia. These spatial patterns\nhighlight the city’s pronounced housing value disparities, reflecting\nbroader socioeconomic divides. They also show potential gentrification\npressures in the areas where low- and mid-priced neighborhoods\nintersect.\n\n## **#2 Distribution of Sale Prices (Histogram)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res_properties_sf, aes(x = sale_price_n)) + geom_histogram(bins = 40, fill = \"steelblue\", color = \"white\", alpha = 0.8) + scale_x_continuous(labels = scales::dollar) + labs( title = \"Distribution of Residential Sale Prices in Philadelphia\", subtitle = \"Data from 2023, 2024\", x = \"Sale Price (USD)\", y = \"Number of Properties\" ) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThis histogram illustrates the distribution of residential property sale\nprices in Philadelphia for the years 2023–2024. The data are highly\nright-skewed, meaning most properties sold at relatively low prices,\nwhile a small number of transactions occurred at very high prices. The\nvast majority of sales cluster below about \\$500,000, with a sharp peak\nnear the lower end of the price range. Only a few properties sold for\nprices above \\$1 million, indicating that such high-value transactions\nare rare.\n\n### **Sale Prices Histogram - Log Transformed**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res_properties_sf, aes(x = sale_price_n)) + geom_histogram(bins = 40, fill = \"darkorange\", color = \"white\", alpha = 0.8) + scale_x_log10(labels = dollar) + labs( title = \"Residential Sale Prices in Philadelphia (Log Scale)\", subtitle = \"Data from 2023, 2024\", x = \"Sale Price (log10 USD)\", y = \"Number of Properties\" ) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThis histogram displays the distribution of residential sale prices in\nPhiladelphia (2023–2024) on a logarithmic scale, which makes the skewed\nprice data easier to interpret. The distribution appears roughly\nbell-shaped, indicating that the underlying price data follow a\nlog-normal distribution. Most residential properties sold for between\n\\$100,000 and \\$1,000,000, forming the central peak of the distribution.\nFewer homes sold at very low or very high prices, shown by the tapering\ntails on both sides.\n\n## \\#**3 Price vs. Structural Features - Scatter Plot** Price vs. Number of Bedrooms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>%             mutate(number_of_bedrooms = as.numeric(number_of_bedrooms))\n\nggplot( data = res_properties_sf %>% filter(!is.na(number_of_bedrooms)), aes(x = number_of_bedrooms, y = sale_price_n) ) + geom_point(color = \"steelblue\", alpha = 0.6, size = 2) + geom_smooth(method = \"lm\", color = \"darkorange\", se = TRUE) + scale_y_continuous(labels = scales::dollar) + labs( title = \"Residential Sale Prices by Number of Bedrooms\", subtitle = \"Data from 2023, 2024 Philadelphia\", x = \"Number of Bedrooms\", y = \"Sale Price (USD)\" ) + theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThe scatter plot shows the relationship between the number of bedrooms\nin residential properties and their sale prices in Philadelphia for 2023\nand 2024. The trend line does indicate a general upward trajectory,\nsuggesting that sale prices tend to increase as the number of bedrooms\nincreases. At the same time, the data shows a wide range of sale prices\nwithin each bedroom category, indicating that other factors such as\nneighborhood location, property condition, amenities, and lot size also\nhave a large influence on overall value. In each bedroom category, most\nof the properties are valued below \\$2,000,000. There are also many high\noutliers in each category, meaning that for luxury properties the number\nof bedrooms is not highly associated with the value. Also, beyond 6\nbedrooms, the sale prices begin to taper off, suggesting that at that\npoint additional bedrooms have a diminishing return.\n\n## \\#**4 Price vs. Spatial Features - Scatter Plot**\n\n## Price vs. Distance to Nearest Farmer's Market\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = res_properties_sf, aes(x = nearest_fmarket_mi, y = sale_price_n) ) + geom_point(color = \"steelblue\", alpha = 0.6, size = 2) + scale_y_continuous(labels = scales::dollar) + labs( title = \"Residential Sale Prices by Nearest Market\", subtitle = \"Data from 2023, 2024 Philadelphia\", x = \"Distance to Nearest Farmer's Market, Miles\", y = \"Sale Price (USD)\" ) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### **Interpretation:**\n\nThe scatter plot shows the relationship between the distance to the\nnearest farmers’ market and the sale price. The highest valued\nproperties are clustered within 1 mile from a market. Beyond 2 miles,\nthe values fall sharply. This suggests that proximity to farmers markets\ndoes to some degree play a role in sale value. However, it is almost\nimportant to note that there is a very wide range or properties within 1\nmile. Overall this graphic is most revealing about the proximity of high\nend properties to farmers markets.\n\n## \\#**5 Creative Visualization**: Choropleth Map of Median Prices and Median Income\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntract_level_data <- res_properties_sf %>%\n  st_drop_geometry() %>%            # remove geometry for calculation\n  group_by(census_tract) %>%\n  summarize(\n    median_price = median(sale_price_n, na.rm = TRUE),\n    median_income = median(median_h_incomeE, na.rm = TRUE)  # ensure tract-level summary\n  )\n\ntract_level_data <- tract_level_data %>% mutate(census_tract = as.numeric(census_tract))\n\ntracts_merged <- philadelphia %>% left_join(tract_level_data, by = c(\"census_tract\"))\n\ntracts_merged <- tracts_merged %>% mutate( income_cat = cut(median_income, breaks = quantile(median_income, probs = seq(0, 1, 0.33), na.rm = TRUE), include.lowest = TRUE, labels = c(\"Low Income\", \"Medium Income\", \"High Income\")), price_cat = cut(median_price, breaks = quantile(median_price, probs = seq(0, 1, 0.33), na.rm = TRUE), include.lowest = TRUE, labels = c(\"Low Price\", \"Medium Price\", \"High Price\")), bivariate_cat = interaction(income_cat, price_cat, sep = \"-\") )\n\n# Define bivariate color palette\n\nbivariate_colors <- c( \"Low Income-Low Price\" = \"#e8e8e8\", \"Medium Income-Low Price\" = \"#ace4e4\", \"High Income-Low Price\" = \"#5ac8c8\", \"Low Income-Medium Price\" = \"#dfb0d6\", \"Medium Income-Medium Price\" = \"#a5add3\", \"High Income-Medium Price\" = \"#5698b9\", \"Low Income-High Price\" = \"#be64ac\", \"Medium Income-High Price\" = \"#8c62aa\", \"High Income-High Price\" = \"#3b4994\" )\n\nggplot(tracts_merged) + geom_sf(aes(fill = bivariate_cat), color = NA) + scale_fill_manual(values = bivariate_colors, name = \"Income vs Price\", guide = guide_legend(title.position = \"top\", ncol = 1)) + labs( title = \"Bivariate Choropleth Map of Property Values and Median Income\", subtitle = \"Census Tracts in Philadelphia (2023–2024)\", ) + theme_minimal() + theme( plot.title = element_text(size = 10, face = \"bold\"), legend.position = \"right\" )\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### Interpretation:\n\nThis is a bivariate choropleth map of median home values and median\nincome by census tract in Philadelphia. Median home values and median\nincome were broken into tertiles. This shows that high-income,\nhigh-price areas are highly clustered in northwest Philadelphia, but\nalso close to center city, university city, and in parts of the\nnortheast. Low-income, low-price areas are found in the west and\nsouthwest, the north, and the northeast. These would indicate\nunderfunded areas. The low-income, high price areas could represent\nareas that are quickly gentrifying. Low income residents here are at\nrisked of getting pushed out of these neighborhoods.\n\n# PHASE 3: FEATURE ENGINEERING\n\n## Price per Bedroom:\n\nThis measures to what extent a property becomes more valuable based on\nthe number of bedrooms it has.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>%\n  mutate(\n    sale_price_n = as.numeric(sale_price_n),\n    number_of_bedrooms = as.numeric(number_of_bedrooms)\n  )\n\nres_properties_sf <- res_properties_sf %>% mutate( price_per_bedroom = sale_price_n/number_of_bedrooms)\n```\n:::\n\n\n## Home Costs Relative to Income:\n\nThis feature divides the sale price by the median household income of\nthe census tract it is in. A lower ratio would indicate more affordable\nhousing in the given tract, while a higher ratio would indicate more\nexpensive housing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>% mutate( price_to_income = sale_price_n / median_h_incomeE )\n```\n:::\n\n\n## Affordability Measure:\n\nThis feature divides the tract's median household income by the sale\nprice. A lower score would indicate the housing is more affordable,\nwhile a higher score would mean the property is less affordable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>% mutate( affordability = median_h_incomeE / sale_price_n )\n```\n:::\n\n\n## Access Index:\n\nThis feature creates one general score to indicate access to multiple\nvaluable amenities including parks, hospitals, farmers markets,\nlandmarks, and schools.A higher score indicates better access.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf <- res_properties_sf %>% mutate( nearest_park_mi = nearest_park / 5280 )\n\nres_properties_sf <- res_properties_sf %>% mutate( access_index = ( 1 / nearest_park_mi) + (1 / nearest_hospital_mi) + (1 / nearest_fmarket_mi) + (1/nearest_landmark_mi) + (1/nearest_school_mi) )\n```\n:::\n\n\n## Buffers:\n\nThese features use buffers to determine the number of amenities within a\nhalf mile buffer of each property. The amenities considered are again\nparks, schools, farmers markets, hospitals, and landmarks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproperty_buffers <- st_buffer( res_properties_sf, dist = 0.5 * 5280 )\n\nres_properties_sf <- res_properties_sf %>% mutate( n_parks_near = lengths(st_intersects(property_buffers, park_properties)), n_schools_near = lengths(st_intersects(property_buffers, schools)), n_fmarkets_near = lengths(st_intersects(property_buffers, farmers_markets)), n_hospitals_near = lengths(st_intersects(property_buffers, hospitals)), n_landmarks_near = lengths(st_intersects(property_buffers, landmarks)) )\n```\n:::\n\n\n## **Summary of Features:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_properties_sf %>%\n  st_drop_geometry() %>%\n  select(price_per_bedroom, price_to_income, affordability, nearest_park_mi,\n         nearest_hospital_mi, nearest_fmarket_mi, nearest_landmark_mi,\n         nearest_school_mi, access_index, n_parks_near, n_schools_near,\n         n_fmarkets_near, n_hospitals_near, n_landmarks_near) %>%\n  skim()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `dplyr::summarize()`.\nℹ In argument: `dplyr::across(tidyselect::any_of(variable_names),\n  mangled_skimmers$funs)`.\nℹ In group 0: .\nCaused by warning:\n! There was 1 warning in `dplyr::summarize()`.\nℹ In argument: `dplyr::across(tidyselect::any_of(variable_names),\n  mangled_skimmers$funs)`.\nCaused by warning in `inline_hist()`:\n! Variable contains Inf or -Inf value(s) that were converted to NA.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |27357      |\n|Number of columns        |14         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|numeric                  |14         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: numeric**\n\n|skim_variable       | n_missing| complete_rate|  mean|    sd|      p0|      p25|      p50|       p75|   p100|hist  |\n|:-------------------|---------:|-------------:|-----:|-----:|-------:|--------:|--------:|---------:|------:|:-----|\n|price_per_bedroom   |       232|          0.99|   Inf|   NaN| 1428.57| 53333.33| 86666.67| 140000.00|    Inf|▇▁▁▁▁ |\n|price_to_income     |       316|          0.99|  5.47| 11.30|    0.09|     2.71|     3.88|      5.44| 283.08|▇▁▁▁▁ |\n|affordability       |       316|          0.99|  0.34|  0.41|    0.00|     0.18|     0.26|      0.37|  11.07|▇▁▁▁▁ |\n|nearest_park_mi     |         0|          1.00|  0.16|  0.12|    0.00|     0.07|     0.14|      0.22|   0.99|▇▃▁▁▁ |\n|nearest_hospital_mi |         0|          1.00|  0.99|  0.67|    0.01|     0.53|     0.84|      1.27|   4.90|▇▅▁▁▁ |\n|nearest_fmarket_mi  |         0|          1.00|  1.35|  1.36|    0.01|     0.49|     0.92|      1.65|   7.48|▇▂▁▁▁ |\n|nearest_landmark_mi |         0|          1.00|  0.27|  0.16|    0.00|     0.15|     0.25|      0.37|   1.37|▇▆▁▁▁ |\n|nearest_school_mi   |         0|          1.00|  0.22|  0.13|    0.01|     0.13|     0.20|      0.28|   1.09|▇▅▁▁▁ |\n|access_index        |         0|          1.00| 29.04| 24.82|    3.81|    16.48|    22.79|     33.08| 781.52|▇▁▁▁▁ |\n|n_parks_near        |         0|          1.00|  5.43|  3.96|    0.00|     3.00|     5.00|      7.00|  27.00|▇▃▁▁▁ |\n|n_schools_near      |         0|          1.00|  4.56|  2.94|    0.00|     2.00|     4.00|      6.00|  17.00|▇▆▃▁▁ |\n|n_fmarkets_near     |         0|          1.00|  0.35|  0.70|    0.00|     0.00|     0.00|      1.00|   4.00|▇▂▁▁▁ |\n|n_hospitals_near    |         0|          1.00|  0.31|  0.65|    0.00|     0.00|     0.00|      0.00|   4.00|▇▂▁▁▁ |\n|n_landmarks_near    |         0|          1.00|  5.93| 10.43|    0.00|     1.00|     3.00|      5.00|  80.00|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n# PHASE 4: MODEL BUILDING\n\n## Further data cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert variables to numeric for later\n\nres_properties_sf <- res_properties_sf %>% \n  mutate(total_livable_area = as.numeric(total_livable_area), \n         number_of_bathrooms = as.numeric(number_of_bathrooms), \n         frontage = as.numeric(frontage),\n         fireplaces = as.numeric(fireplaces), \n         year_built = as.numeric(year_built) )\n\n#create categorical variables\nres_properties_sf$quality_grade <- as.factor(res_properties_sf$quality_grade)\nres_properties_sf$category_code <- as.factor(res_properties_sf$category_code)\n\n# log to reduce skew - compresses large values to make more symmetrical\n\nres_properties_sf <- res_properties_sf %>% mutate(log_price =\nlog(sale_price_n))\n```\n:::\n\n\n## **Creating Feature Sets**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Structural features\n\nstructural_features <-\nres_properties_sf %>% select(log_price, number_of_bedrooms,\nnumber_of_bathrooms,total_livable_area)\n\n# census variables features\n\ncensus_features <- res_properties_sf %>% select(log_price,\nnumber_of_bedrooms, number_of_bathrooms,total_livable_area,\nmedian_h_incomeE, total_populationE)\n\n# spatial features\n\nspatial_features <- res_properties_sf %>% select(log_price,\nnumber_of_bedrooms, number_of_bathrooms,total_livable_area,\nmedian_h_incomeE, total_populationE, nearest_park_mi,\nnearest_hospital_mi, nearest_fmarket_mi, nearest_landmark_mi,\nnearest_school_mi, n_parks_near, n_schools_near, n_fmarkets_near,\nn_hospitals_near, n_landmarks_near, access_index)\n```\n:::\n\n\n## Building Models\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# structural model \nstructural_model <- lm(log_price ~\nnumber_of_bedrooms + number_of_bathrooms + total_livable_area +\nfireplaces, data = res_properties_sf)\n\n# census model\n\ncensus_model <- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE +price_to_income, data =\nres_properties_sf)\n\n# spatial model\n\nspatial_model <- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE + price_to_income+\nnearest_park_mi + nearest_hospital_mi + nearest_fmarket_mi +\nnearest_landmark_mi + nearest_school_mi + n_parks_near +\nn_schools_near + n_fmarkets_near + n_hospitals_near + n_landmarks_near +\naccess_index, data = res_properties_sf)\n\n# fixed effects interaction model\n\nfixed_effects_interation_model <- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area * median_h_incomeE +\nyear_built*median_h_incomeE + fireplaces + total_populationE +\nprice_to_income+ nearest_park_mi + nearest_hospital_mi +\nnearest_fmarket_mi + nearest_landmark_mi + nearest_school_mi +\nn_parks_near + n_schools_near + n_fmarkets_near + n_hospitals_near +\nn_landmarks_near + access_index + category_code, data =\nres_properties_sf)\n```\n:::\n\n\nWe built our each model with progressively more features in the following categories along with our hypotheses about their interaction with the dependent variable:\n\n1. **Structural features**: These features came from the property sales data, and thus each sale has a unique value for the following variables:\n\n   - *Number of bedrooms and bathrooms*: Higher numbers tends to increase price\n   - *Total livable area*: More livable area tends to increase price\n   - *Fireplaces*: More fireplaces tends to be associated with luxury and thus price\n\n2. **Census features**: These features come from the ACS and are aggregated at the tract level, so each sale may share values with other sales:\n\n   - *Median Household Income*: Higher income areas more likely to afford higher priced properties\n   - *Total Population*: Higher density areas could have more market competition and thus lower prices\n   - *Price to Income*: Computed ratio of sale price to median income, approximating housing affordability \n\n3. **Spatial features**: These features were created by comparing city features to locations of property sales, so each sale has a unique value:\n\n   - *Nearest Park*: A low number and thus a close park may increase property value\n   - *Nearest Hospital*: A low number and thus close hospital may increase property value\n   - *Nearest Farmer's Market*: Another feature thats nearness may increase value\n   - *Nearest Landmark*: Nearness to landmark could be desirable feature of high value property\n   - *Nearest School*: Nearness to school may increase property value\n   - *Number of Parks Near*: A higher number of parks within .5 mi may increase property value\n   - *Number of Hospitals Near*: Higher number increase property value\n   - *Number of Landmarks Near*: Higher number increase property value\n   - *Number of Farmer's Markets Near*: Higher number increase property value\n   - *Number of Schools Near*: Higher number increase property value\n   - *Access Index*: This incorporates all above features into one score where a higher number indicates higher access to many types of public features and thus may increase property value\n\n4. **Fixed Effects & Interaction terms**:\n\n   - *Total Livable Area x Median Household Income*: More space in a higher income area could increase property value even more than either variable alone\n   - *Year Built x Median Household Income*: An old home in a higher income area may indicate historically significant, high value property rather than 'outdated' and thus lower value\n   - *Category Code*: 1 = Single Family Home, 2 = Multi-Family, 3 = \"Mixed Use\". This fixed effect should represent the amount of space per household family member and also account for current cultural preferance for single family homes over shared spaces\n\n## **Stargazer Output**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressWarnings(\n  stargazer(\n    structural_model, census_model, spatial_model, fixed_effects_interation_model,\n    type = \"text\",\n    star.cutoffs = c(0.05, 0.01, 0.001),\n    title = \"Regression Models Comparison\"\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nRegression Models Comparison\n=========================================================================================================================================================\n                                                                                     Dependent variable:                                                 \n                                    ---------------------------------------------------------------------------------------------------------------------\n                                                                                          log_price                                                      \n                                                (1)                          (2)                           (3)                           (4)             \n---------------------------------------------------------------------------------------------------------------------------------------------------------\nnumber_of_bedrooms                           -0.119***                    -0.035***                     -0.018***                     -0.019***          \n                                              (0.005)                      (0.004)                       (0.004)                       (0.004)           \n                                                                                                                                                         \nnumber_of_bathrooms                           0.364***                     0.201***                     0.183***                      0.180***           \n                                              (0.007)                      (0.005)                       (0.005)                       (0.006)           \n                                                                                                                                                         \ntotal_livable_area                           0.0004***                    0.0002***                     0.0002***                     0.0004***          \n                                             (0.00001)                    (0.00001)                     (0.00001)                     (0.00001)          \n                                                                                                                                                         \nfireplaces                                    0.184***                      0.020                         0.020                       0.063***           \n                                              (0.016)                      (0.012)                       (0.011)                       (0.012)           \n                                                                                                                                                         \nmedian_h_incomeE                                                          0.00001***                   0.00001***                     0.0001***          \n                                                                          (0.00000)                     (0.00000)                     (0.00001)          \n                                                                                                                                                         \nyear_built                                                                                                                            0.004***           \n                                                                                                                                      (0.0003)           \n                                                                                                                                                         \ntotal_populationE                                                         0.00001***                   0.00001***                    0.00001***          \n                                                                          (0.00000)                     (0.00000)                     (0.00000)          \n                                                                                                                                                         \nprice_to_income                                                            0.034***                     0.034***                      0.034***           \n                                                                           (0.0003)                     (0.0003)                      (0.0003)           \n                                                                                                                                                         \nnearest_park_mi                                                                                         0.236***                      0.186***           \n                                                                                                         (0.033)                       (0.033)           \n                                                                                                                                                         \nnearest_hospital_mi                                                                                       0.011                         0.012            \n                                                                                                         (0.007)                       (0.007)           \n                                                                                                                                                         \nnearest_fmarket_mi                                                                                      0.037***                      0.027***           \n                                                                                                         (0.003)                       (0.003)           \n                                                                                                                                                         \nnearest_landmark_mi                                                                                     0.097***                      0.097***           \n                                                                                                         (0.025)                       (0.024)           \n                                                                                                                                                         \nnearest_school_mi                                                                                       0.137***                       0.097**           \n                                                                                                         (0.030)                       (0.030)           \n                                                                                                                                                         \nn_parks_near                                                                                              0.002                         0.002            \n                                                                                                         (0.001)                       (0.001)           \n                                                                                                                                                         \nn_schools_near                                                                                          -0.016***                     -0.013***          \n                                                                                                         (0.001)                       (0.001)           \n                                                                                                                                                         \nn_fmarkets_near                                                                                         0.089***                      0.084***           \n                                                                                                         (0.006)                       (0.006)           \n                                                                                                                                                         \nn_hospitals_near                                                                                        0.093***                      0.087***           \n                                                                                                         (0.006)                       (0.006)           \n                                                                                                                                                         \nn_landmarks_near                                                                                        0.002***                      0.002***           \n                                                                                                        (0.0004)                      (0.0004)           \n                                                                                                                                                         \naccess_index                                                                                             0.0001                        0.00003           \n                                                                                                        (0.0002)                      (0.0002)           \n                                                                                                                                                         \ncategory_code2                                                                                                                        -0.058***          \n                                                                                                                                       (0.013)           \n                                                                                                                                                         \ncategory_code3                                                                                                                          0.095            \n                                                                                                                                       (0.361)           \n                                                                                                                                                         \ntotal_livable_area:median_h_incomeE                                                                                                   -0.000***          \n                                                                                                                                       (0.000)           \n                                                                                                                                                         \nmedian_h_incomeE:year_built                                                                                                          -0.00000***         \n                                                                                                                                       (0.000)           \n                                                                                                                                                         \nConstant                                     11.593***                    10.648***                     10.517***                     2.042***           \n                                              (0.015)                      (0.017)                       (0.024)                       (0.502)           \n                                                                                                                                                         \n---------------------------------------------------------------------------------------------------------------------------------------------------------\nObservations                                   25,924                       25,624                       25,624                        25,624            \nR2                                             0.241                        0.608                         0.624                         0.631            \nAdjusted R2                                    0.241                        0.608                         0.624                         0.631            \nResidual Std. Error                      0.735 (df = 25919)           0.526 (df = 25616)           0.516 (df = 25605)            0.511 (df = 25600)      \nF Statistic                         2,061.536*** (df = 4; 25919) 5,677.463*** (df = 7; 25616) 2,358.788*** (df = 18; 25605) 1,906.509*** (df = 23; 25600)\n=========================================================================================================================================================\nNote:                                                                                                                       *p<0.05; **p<0.01; ***p<0.001\n```\n\n\n:::\n:::\n\nThe Stargazer output sheds some light on the most important variables:\n\n  - **Positive Coefficients**: An increase in units of these is associated with an increase in property sale value to a very high degree of confidence (p-value of less than 2e-16):\n    - number_of_bathrooms\n    - total_livable_area\n    - median_h_incomeE\n    - year_built\n    - price_to_income\n    - nearest_fmarket_mi (although here a high value is associated with farther distance from a farmer's market)\n    - n_fmarkets_near (oddly, seeing as farther distance form farmer's marker is modeled as depressing value, here higher number of close farmer's markets is positively associated with value)\n    - n_hospitals_near\n  - **Negative Coefficients**: An increase in units of these is associated with a decrease in property sale value to a very high degree of confidence (p-value of less than 2e-16):\n    - n_schools_near\n    - category_code2 (multi-family housing as compared to single family housing depressed property sale value)\n    - total_livable_area\\*median_h_incomeE\n    - median_h_incomeE\\*year_built\n\n# PHASE 5: MODEL VALIDATION\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_control <- trainControl(method = \"cv\", number = 10)\n\ncv.mod.1 <- train(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces, data =\nres_properties_sf, method = \"lm\", trControl = train_control, na.action =\nna.omit)\n\ncv.mod.2 <- train(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE +price_to_income, data =\nres_properties_sf, method = \"lm\", trControl = train_control, na.action =\nna.omit)\n\ncv.mod.3 <- train(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE + price_to_income+\nnearest_park_mi + nearest_hospital_mi + nearest_fmarket_mi +\nnearest_landmark_mi + nearest_school_mi + n_parks_near +\nn_schools_near + n_fmarkets_near + n_hospitals_near + n_landmarks_near +\naccess_index, data = res_properties_sf, method = \"lm\", trControl =\ntrain_control, na.action = na.omit)\n\ncv.mod.4 <- train(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area * median_h_incomeE +\nyear_built*median_h_incomeE + fireplaces + total_populationE +\nprice_to_income+ nearest_park_mi + nearest_hospital_mi +\nnearest_fmarket_mi + nearest_landmark_mi + nearest_school_mi +\nn_parks_near + n_schools_near + n_fmarkets_near + n_hospitals_near +\nn_landmarks_near + access_index + category_code, data =\nres_properties_sf, method = \"lm\", trControl = train_control, na.action =\nna.omit)\n\n#table of models' stats \nmetrics_mod1 <- cv.mod.1$results[1, c(\"RMSE\", \"Rsquared\", \"MAE\")]\nmetrics_mod1$model <- \"Structural Model\"\n\nmetrics_mod2 <- cv.mod.2$results[1, c(\"RMSE\", \"Rsquared\", \"MAE\")]\nmetrics_mod2$model <- \"Structural + Census Model\"\n\nmetrics_mod3 <- cv.mod.3$results[1, c(\"RMSE\", \"Rsquared\", \"MAE\")]\nmetrics_mod3$model <- \"Structural + Census + Spatial Model\"\n\nmetrics_mod4 <- cv.mod.4$results[1, c(\"RMSE\", \"Rsquared\", \"MAE\")]\nmetrics_mod4$model <- \"Structural + Census + Spatial + Fixed Effects &\nInteractions Model\"\n\nmetrics_table <- bind_rows(metrics_mod1, metrics_mod2, metrics_mod3,\nmetrics_mod4)\n\nkable(\n  metrics_table, \n  col.names = c(\"RMSE\", \"R-Squared\", \"MAE\", \"Model Name\"),\n  caption = \"How Well do Four Models Explain Variance of Property Sale Data?\",\n  \"html\") %>% kable_styling(full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>How Well do Four Models Explain Variance of Property Sale Data?</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> RMSE </th>\n   <th style=\"text-align:right;\"> R-Squared </th>\n   <th style=\"text-align:right;\"> MAE </th>\n   <th style=\"text-align:left;\"> Model Name </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.7346834 </td>\n   <td style=\"text-align:right;\"> 0.2417238 </td>\n   <td style=\"text-align:right;\"> 0.5240572 </td>\n   <td style=\"text-align:left;\"> Structural Model </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.5271256 </td>\n   <td style=\"text-align:right;\"> 0.6092225 </td>\n   <td style=\"text-align:right;\"> 0.3712141 </td>\n   <td style=\"text-align:left;\"> Structural + Census Model </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.5164102 </td>\n   <td style=\"text-align:right;\"> 0.6252742 </td>\n   <td style=\"text-align:right;\"> 0.3603597 </td>\n   <td style=\"text-align:left;\"> Structural + Census + Spatial Model </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.5137505 </td>\n   <td style=\"text-align:right;\"> 0.6293136 </td>\n   <td style=\"text-align:right;\"> 0.3533474 </td>\n   <td style=\"text-align:left;\"> Structural + Census + Spatial + Fixed Effects &amp;\nInteractions Model </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot fit vs residuals#### \nresid.1 <- data.frame( \n  fitted = fitted(cv.mod.1$finalModel),\n  residuals = resid(cv.mod.1$finalModel) \n  )\n\nggplot(resid.1, aes(x = fitted, y = residuals)) + geom_point() +\ngeom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\nlabs(title = \"Residual Plot\", x = \"Fitted Values\", y = \"Residuals\") +\ntheme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresid.2 <- data.frame( fitted = fitted(cv.mod.2$finalModel),\n  residuals = resid(cv.mod.2$finalModel) )\n\nggplot(resid.2, aes(x = fitted, y = residuals)) + geom_point() +\ngeom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\nlabs(title = \"Residual Plot\", x = \"Fitted Values\", y = \"Residuals\") +\ntheme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresid.3 <- data.frame( fitted = fitted(cv.mod.3$finalModel),\n  residuals = resid(cv.mod.3$finalModel) )\n\nggplot(resid.3, aes(x = fitted, y = residuals)) + geom_point() +\ngeom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\nlabs(title = \"Residual Plot\", x = \"Fitted Values\", y = \"Residuals\") +\ntheme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresid.4 <- data.frame( fitted = fitted(cv.mod.4$finalModel),\n  residuals = resid(cv.mod.4$finalModel) )\n\nggplot(resid.4, aes(x = fitted, y = residuals)) + geom_point() +\ngeom_hline(yintercept = 0, color = \"red\", linetype = \"dashed\") +\nlabs(title = \"Residual Plot\", x = \"Fitted Values\", y = \"Residuals\") +\ntheme_minimal()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreds <- predict(cv.mod.4, newdata = res_properties_sf)\nres_properties_sf$fitted <- NA_real_\nres_properties_sf$residuals <- NA_real_\nres_properties_sf$fitted[as.numeric(names(preds))] <- preds\nres_properties_sf$residuals[as.numeric(names(preds))] <-\nres_properties_sf$log_price[as.numeric(names(preds))] - preds\n\nres_properties_sf%>% filter(!is.na(residuals))%>% \n  ggplot() +\n    geom_sf(aes(color = residuals), alpha=.75)+ \n    scale_color_gradient2( low = \"darkred\", mid = \"lightgray\", high = \"lightgreen\", midpoint = 0, name = \"Residual (log-price)\")+\n    labs(\n      title = \"Map of Residuals\",\n      subtitle = str_wrap(\"Where a positive value indicates an underestimate and a negative value indicates an overestimate\"))+\n    theme_void()\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\nThis Map shows the locations of over and underestimates produced by our model. There is a relatively even spread of high absolute value estimates, but overestimates are visually bunched in North Central Philadelphia, and underestimates are clustered in North East and North West, West, and South Philadelphia. This shows that our model could have benefited from a fixed effect accounting for the sector or neighborhood in estimating price, seeing as the areas underestimated are generally considered the wealthier more desirable areas of Philadelphia, and the overestimated areas are generally considered less desirable areas, where reputation may have more influence over property sale price than amenities, structural features, density, income, and affordability. \n\n# PHASE 6: MODEL DIAGNOSTICS\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1, 3))\n\nplot(cv.mod.4$finalModel, which = 1)  # Residuals vs Fitted \nplot(cv.mod.4$finalModel, which = 2)  # Q-Q \nplot(cv.mod.4$finalModel, which = 4)  # Cook's distance\n```\n\n::: {.cell-output-display}\n![](TechnicalAppendix_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n**Interpretation**: \n\n  - Residual vs Fitted\n    - This plot shows a down-turned curve, indicating heteroscedasticity, or in other words that the lower and higher end of predictions were more often overestimates. The plot indicates our model could further benefit from quadratic terms. There are also potential extreme outliers that could be removed. \n  - QQPlot\n    - This plot indicates the distribution of residuals has very a very long left tail. This indicates that the overestimates are more extreme than a normal distribution would have, again with a cluster of extreme outliers. \n  - Cook's distance\n    - This plot indeed confirms that there are a handful of extreme outliers that are exerting outsize leverage on the model such as observations X2600 and X12295\n    \nIn future models, we should not only remove extremely high values (we put a cap at max $10M property sale values) but also we should filter out extremely low property sale values, as they appear to have leverage over the model. We could also investigate if there are terms that should be quadratic given the curved Residual v Fitted plot. \n\n# PHASE 7: CONCLUSIONS & RECOMMENDATIONS\n\n1. What is your final model's accuracy?\n  - Our final model explains 62% of the variance in the data. \n2. Which features matter most for Philadelphia prices?\n  - The features that matter the are features such as area, bathrooms, year built, affordability and also interactions between median income, year built, and livable area. The city amenities that matter most for sale price are farmer's markets, hospitals, and shcools, but less so parks and landmarks. An important fixed effect is the designation of single family home or multi family home, with multi family home exerting a negative effect on sale price compared to single family homes \n3. Which neighborhoods are hardest to predict?\n  - North Central Philadelphia exhibited the highest concentration of overestimated home values, and this could be because the stigma associated with North Central Philadelphia causes other factors that normally increase a home value to have less effect. \n4. Equity concerns?\n  - Given the consistent over-estimation of sale price values in North Central Philadelphia, caution must be exerted in presenting this information. Our map showing income brackets and sale price brackets compared show that North Central has a large concentration of low income and low sale price properties, and thus the inacuracy of predicting the property values in this area could induce overburdening taxes on an already financially burdened area of the city. \n5. Limitations?\n  - Our model's limitations lie in the outsize influence that a few low sale price properties holds on the model as well as the spatial correlation to under and over estimates. This strongly indicates that accounting for Phidelphia neighborhoods or regions through a fixed effect variable should be considered for further modeling, as this seems like a factor that in many cases matters more than the structural, affordability, or amenity features. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}