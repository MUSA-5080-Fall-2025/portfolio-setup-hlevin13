{
  "hash": "e8b9ec6b6ebcb41f31f44ae6039853d7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Hope Levin\"\ndate: 2025-10-12\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n## Assignment Overview\n\n**Learning Objectives:** - Apply spatial operations to answer\npolicy-relevant research questions - Integrate census demographic data\nwith spatial analysis - Create publication-quality visualizations and\nmaps - Work with spatial data from multiple sources - Communicate\nfindings effectively for policy audiences\n\n------------------------------------------------------------------------\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable\npopulations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for\nhealthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and\nbrief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data: - Pennsylvania county boundaries -\nPennsylvania hospitals (from lecture data) - Pennsylvania census tracts\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(ggplot2)\n\n# Census API key\ncensus_api_key(Sys.getenv(\"CENSUS_API_KEY\"), install = FALSE)\n\n# Load spatial data\npa_counties <- st_read(\"data/Pennsylvania_County_Boundaries.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Pennsylvania_County_Boundaries' from data source \n  `/Users/hope/Documents/GitHub/portfolio-setup-hlevin13/assignments/lab_2/data/Pennsylvania_County_Boundaries.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 67 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8963377 ymin: 4825316 xmax: -8314404 ymax: 5201413\nProjected CRS: WGS 84 / Pseudo-Mercator\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals <- st_read(\"data/hospitals.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hospitals' from data source \n  `/Users/hope/Documents/GitHub/portfolio-setup-hlevin13/assignments/lab_2/data/hospitals.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 223 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n```{.r .cell-code}\n# Questions to answer:\nhospitals %>%\n  group_by(FACILITY_N) %>%\n  summarise(count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 222 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\n# A tibble: 222 × 3\n   FACILITY_N                                    count             geometry\n   <chr>                                         <int>          <POINT [°]>\n 1 ADVANCED SURGICAL HOSPITAL                        1 (-80.27907 40.15655)\n 2 AHN Canonsburg Hospital                           1 (-80.19077 40.24585)\n 3 AHN Emerus Westmoreland Neighborhood Hospital     1 (-79.60014 40.31084)\n 4 AHN Jefferson Hospital                            1 (-79.93342 40.31745)\n 5 AHN Saint Vincent Hospital                        1 (-80.07954 42.11131)\n 6 AHN-Allegheny General Hospital                    1 (-80.00332 40.45695)\n 7 AVENUES RECOVERY MEDICAL CENTER AT VALLEY FO…     1 (-75.36752 40.15866)\n 8 Albert Einstein Medical Center                    1 (-75.14335 40.03696)\n 9 Allegheny Health Network Wexford Hospital         1  (-80.0624 40.63554)\n10 Allegheny Valley Hospital                         1 (-79.73647 40.61824)\n# ℹ 212 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\ncensus_tracts %>%\n  group_by(GEOID) %>%\n  summarise(count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 3445 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -80.51989 ymin: 39.7198 xmax: -74.68952 ymax: 42.26986\nGeodetic CRS:  NAD83\n# A tibble: 3,445 × 3\n   GEOID       count                                                    geometry\n   <chr>       <int>                                               <POLYGON [°]>\n 1 42001030101     1 ((-77.15032 40.04536, -77.15219 40.04152, -77.14124 40.036…\n 2 42001030103     1 ((-77.06828 39.97375, -77.06277 39.97149, -77.05646 39.968…\n 3 42001030104     1 ((-77.09913 39.94784, -77.0904 39.94587, -77.08214 39.9481…\n 4 42001030200     1 ((-77.23764 40.01404, -77.21936 40.00666, -77.21849 40.006…\n 5 42001030300     1 ((-77.42136 39.98129, -77.3946 39.96514, -77.38766 39.9589…\n 6 42001030400     1 ((-77.46961 39.91617, -77.46863 39.90723, -77.46876 39.903…\n 7 42001030500     1 ((-77.29438 39.93242, -77.2939 39.92694, -77.29242 39.9248…\n 8 42001030600     1 ((-77.22819 39.89023, -77.22149 39.88539, -77.22534 39.882…\n 9 42001030700     1 ((-77.18479 39.8121, -77.17674 39.80536, -77.1762 39.805, …\n10 42001030801     1 ((-77.02221 39.86435, -77.01868 39.85995, -77.00403 39.836…\n# ℹ 3,435 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(pa_counties)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 / Pseudo-Mercator \n  wkt:\nPROJCRS[\"WGS 84 / Pseudo-Mercator\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            MEMBER[\"World Geodetic System 1984 (G2296)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"Popular Visualisation Pseudo-Mercator\",\n        METHOD[\"Popular Visualisation Pseudo Mercator\",\n            ID[\"EPSG\",1024]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"False easting\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Web mapping and visualisation.\"],\n        AREA[\"World between 85.06°S and 85.06°N.\"],\n        BBOX[-85.06,-180,85.06,180]],\n    ID[\"EPSG\",3857]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(hospitals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(census_tracts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n```\n\n\n:::\n:::\n\n\n**Questions to answer:** - How many hospitals are in your dataset? - 223\nhospitals. - How many census tracts? - 3,445 census tracts. - What\ncoordinate reference system is each dataset in? - pa_counties: WGS 84 /\nPseudo-Mercator EPSG: 3857 - hospitals: WGS 84 EPSG: 4326 -\ncensus_tracts: NAD83 EPSG: 4269\n\n------------------------------------------------------------------------\n\n#### Step 2: Get Demographic Data\n\nUse `tidycensus` to download tract-level demographic data for\nPennsylvania.\n\n**Required variables:** - Total population - Median household income -\nPopulation 65 years and over (you may need to sum multiple age\ncategories)\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\npa_tract_data <- get_acs(\n  geography = \"tract\",\n  state = \"Pennsylvania\",\n  variables = c(\n    total_population = \"B01003_001\", \n    median_income = \"B19013_001\",\n    over_65 = \"B01001_020\"),\n  survey = \"acs5\",\n  year = 2022,\n  output = \"wide\"\n)\n\n# Join to tract boundaries\ncensus_tracts <- census_tracts %>%\n  left_join(pa_tract_data, by = \"GEOID\")\n\n# Questions to answer:\npa_tract_data %>%\n  filter(is.na(median_incomeE)) %>%\n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1    63\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(pa_tract_data$median_incomeE, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70188\n```\n\n\n:::\n:::\n\n\n**Questions to answer:** - What year of ACS data are you using? - 2022\nACS data - How many tracts have missing income data? - 63 tracts - What\nis the median income across all PA census tracts? - \\$70,188\n\n------------------------------------------------------------------------\n\n#### Step 3: Define Vulnerable Populations\n\nIdentify census tracts with vulnerable populations based on TWO\ncriteria: 1. Low median household income (choose an appropriate\nthreshold) 2. Significant elderly population (choose an appropriate\nthreshold)\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\nincome_threshold <- quantile (\n  census_tracts$median_incomeE, 0.25, na.rm = TRUE)\n# $55,924\n\ncensus_tracts <- census_tracts %>%\n  mutate(pct_over_65 = (over_65E / total_populationE) *100)\n\nage_threshold <- quantile (\n  census_tracts$pct_over_65, 0.75, na.rm = TRUE)\n    \nvulnerable_pop <- census_tracts %>%\n  filter(\n    median_incomeE < income_threshold,\n    pct_over_65 > age_threshold\n  )\n\nvulnerable_pop <- vulnerable_pop %>%\n  mutate(\n    vulnerable = median_incomeE < income_threshold & pct_over_65 > age_threshold\n  )\n```\n:::\n\n\n**Questions to answer:** - What income threshold did you choose and\nwhy? - My income threshold is the bottom 25%, or \\$55,924. By going with\na quantile approach, I was able to determine the cutoff in context of\nthe entire state. - What elderly population threshold did you choose and\nwhy? - Again, I went with a quantile approach for contextual\nunderstanding. However, I choose the top 25% as I was interested in\nseeing tracts with large elderly populations. - How many tracts meet\nyour vulnerability criteria? - 168 tracts meet both criterias. - What\npercentage of PA census tracts are considered vulnerable by your\ndefinition? - 4.87% of tracts.\n\n------------------------------------------------------------------------\n\n#### Step 4: Calculate Distance to Hospitals\n\nFor each vulnerable tract, calculate the distance to the nearest\nhospital.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\nvulnerable_pop <- st_transform(vulnerable_pop, crs = 3365)\n\nhospitals <- st_transform(hospitals, crs = 3365)\n\n# Calculate distance from each tract centroid to nearest hospital\ntract_centroid <- st_centroid(vulnerable_pop)\n\ndistance_matrix <- st_distance(tract_centroid, hospitals)\n\nvulnerable_pop <- vulnerable_pop %>%\n  mutate(\n    hospital_dis = apply(distance_matrix, 1, min),\n    hospital_miles = as.numeric(hospital_dis) / 1609.34)\n\n# Questions to answer\nvulnerable_pop %>%\n  summarise(\n    avg_distance = mean(hospital_miles, na.rm = TRUE),\n    max_distance = max(hospital_miles, na.rm = TRUE),\n    over_15 = sum(hospital_miles > 15, na.rm = TRUE)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 1204220 ymin: 145044.8 xmax: 2727730 ymax: 1029901\nProjected CRS: NAD83(HARN) / Pennsylvania South (ftUS)\n  avg_distance max_distance over_15                       geometry\n1     13.46201     62.85519      47 MULTIPOLYGON (((1337166 245...\n```\n\n\n:::\n:::\n\n\n**Requirements:** - Use an appropriate projected coordinate system for\nPennsylvania - Calculate distances in miles - Explain why you chose your\nprojection - I chose Pennsylvania State Plane South, as it is the\nprojection that I am most comfortable mapping with.\n\n**Questions to answer:** - What is the average distance to the nearest\nhospital for vulnerable tracts? - The average distance to the nearest\ntract for vulnerable tracts is 13.5 miles. - What is the maximum\ndistance? - The maximum distance is 62.9 miles. - How many vulnerable\ntracts are more than 15 miles from the nearest hospital? - 47 tracts are\nmore than 15 miles away from the nearest hospital.\n\n------------------------------------------------------------------------\n\n#### Step 5: Identify Underserved Areas\n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles\nfrom the nearest hospital.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\nvulnerable_pop <- vulnerable_pop %>%\n  mutate(\n    underserved = hospital_miles > 15 & median_incomeE < income_threshold & pct_over_65 > age_threshold\n  )\n\n# Questions to answer\nvulnerable_pop %>%\n  summarise(\n    underserved_count = sum(underserved, na.rm = TRUE),\n    total_tracts = n (),\n    underserved_pct = (underserved_count/total_tracts)*100\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 1204220 ymin: 145044.8 xmax: 2727730 ymax: 1029901\nProjected CRS: NAD83(HARN) / Pennsylvania South (ftUS)\n  underserved_count total_tracts underserved_pct                       geometry\n1                47          168        27.97619 MULTIPOLYGON (((1337166 245...\n```\n\n\n:::\n:::\n\n\n**Questions to answer:** - How many tracts are underserved? - 47 tracts\nare underserved. - What percentage of vulnerable tracts are\nunderserved? - Roughly 28% of tracts are underserved. - Does this\nsurprise you? Why or why not? - Somewhat... having gone to college in\nupstate New York, I'm well aware of healthcare access disparities in\nrural America. However, I was anticipating the number to be much lower,\naround 20-25%. Shocking that such a high barrier exists given the\nsupposed advancements in this country.\n\n------------------------------------------------------------------------\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics\nabout vulnerable populations and hospital access.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\npa_counties <- st_transform(pa_counties, crs = 3365)\nvulnerable_pop <- st_transform(vulnerable_pop, crs = 3365)\n\ntracts_with_counties <- vulnerable_pop %>%\n  st_join(pa_counties %>% select(COUNTY_NAM))\n\n# Aggregate statistics by county\ncounty_stats <- tracts_with_counties %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    total_tracts = n(),\n    vulnerable_num = sum(vulnerable, na.rm = TRUE),\n    underserved_num = sum(underserved, na.rm =TRUE),\n    pct_underserved = (underserved_num/vulnerable_num)*100,\n    hosp_dist = mean(hospital_miles, na.rm = TRUE),\n    total = sum (total_populationE, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n:::\n\n\n**Required county-level statistics:** - Number of vulnerable tracts -\nNumber of underserved tracts\\\n- Percentage of vulnerable tracts that are underserved - Average\ndistance to nearest hospital for vulnerable tracts - Total vulnerable\npopulation\n\n**Questions to answer:** - Which 5 counties have the highest percentage\nof underserved vulnerable tracts? - I found that 21 counties share the\nsame percentage of underserved vulnerable tracts - Armstrong, Cameron,\nClarion, Clinton, Elk, Forest, Franklin, Fulton, Greene, Huntingdon,\nIndiana, Jefferson, Juniata, Lebanon, McKean, Monroe, Norththumberland,\nPerry, Potter, Somerset, and Tioga. - Which counties have the most\nvulnerable people living far from hospitals? - The top 5 counties of\nvulnerable people living from hospitals are 1. Monroe (58 miles), Perry,\nFranklin, Juniata, 5. Forest (50 miles). - Are there any patterns in\nwhere underserved counties are located? - Many of these counties are\nclustered in the Northwest, Central, and Southeast Pennsylvania.\n\n------------------------------------------------------------------------\n\n#### Step 7: Create Summary Table\n\nCreate a professional table showing the top 10 priority counties for\nhealthcare investment.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\npriority_counties <- county_stats %>%\n  arrange(desc(hosp_dist)) %>%\n    slice(1:10) %>%\n  select(COUNTY_NAM, total_tracts, total, pct_underserved, hosp_dist)\n\nkable(priority_counties,\n      col.names = c(\"County\", \"Vulnerable Tracts\", \"Total Population\", \"Underserved Vulnerable Tracts (%)\", \"Distance to Nearest Hospital (mi)\"),\n      caption = \"Top 10 Priority Counties for Healthcare Investment\",\n      format.args = list(big.mark = \",\")\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment\n\n|County         | Vulnerable Tracts| Total Population| Underserved Vulnerable Tracts (%)| Distance to Nearest Hospital (mi)|\n|:--------------|-----------------:|----------------:|---------------------------------:|---------------------------------:|\n|MONROE         |                 1|            1,299|                               100|                          58.02058|\n|PERRY          |                 2|            5,800|                               100|                          57.52312|\n|FRANKLIN       |                 1|            1,782|                               100|                          52.19105|\n|JUNIATA        |                 1|            1,782|                               100|                          52.19105|\n|FOREST         |                 2|            4,406|                               100|                          50.03962|\n|CLARION        |                 2|            4,750|                               100|                          47.65747|\n|SOMERSET       |                 1|            2,138|                               100|                          46.97646|\n|TIOGA          |                 2|            6,865|                               100|                          46.44334|\n|HUNTINGDON     |                 2|            5,111|                               100|                          43.53532|\n|NORTHUMBERLAND |                 7|           21,415|                               100|                          43.15381|\n\n\n:::\n:::\n\n\n**Requirements:** - Use `knitr::kable()` or similar for formatting -\nInclude descriptive column names - Format numbers appropriately (commas\nfor population, percentages, etc.) - Add an informative caption - Sort\nby priority (you decide the metric)\n\n------------------------------------------------------------------------\n\n## Part 2: Comprehensive Visualization\n\nUsing the skills from Week 3 (Data Visualization), create\npublication-quality maps and charts.\n\n### Map 1: County-Level Choropleth\n\nCreate a choropleth map showing healthcare access challenges at the\ncounty level.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\ncounty_map <- pa_counties %>%\n  st_transform(crs = st_crs(vulnerable_pop)) %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\nhospitals <- st_transform(hospitals, crs = 3365)\n\nggplot() +\n  geom_sf(data = county_map, \n          aes(fill = pct_underserved), \n          color = \"black\", size = .25) +\n  geom_sf(data = hospitals,\n          color = \"white\",\n          size = 1) +\n  scale_fill_viridis_c(\n    name = \"Percent Underserved\",\n    option = \"magma\"\n  ) +\n  labs(\n    title = \"Healthcare Disparity Across Pennsylvania\",\n    subtitle = \"Percent of vulnerable census tracts underserved by county\",\n    caption = \"Source: ACS 2022 5-Year Estimates\"\n  ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Levin_Hope_Assignment2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n**Requirements:** - Fill counties by percentage of vulnerable tracts\nthat are underserved - Include hospital locations as points - Use an\nappropriate color scheme - Include clear title, subtitle, and caption -\nUse `theme_void()` or similar clean theme - Add a legend with formatted\nlabels\n\n------------------------------------------------------------------------\n\n### Map 2: Detailed Vulnerability Map\n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\nvulnerable_pop <- vulnerable_pop %>%\n  mutate(\n    underserved_flag = ifelse (underserved == TRUE, \"Underserved\", \"Other\")\n  )\n\nunique(vulnerable_pop$underserved_flag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Underserved\" \"Other\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nggplot () +\n  geom_sf(data = vulnerable_pop,\n          aes(fill = underserved_flag),\n          color = \"grey\")+\n  geom_sf(data = pa_counties,\n          fill = NA,\n          color = \"black\",\n          size = 0.5) +\n  geom_sf(data = hospitals,\n          size = 2,\n          shape = 21,\n          fill = \"cornflowerblue\")+\n  scale_fill_manual(values = c(\"Underserved\" = \"orchid\", \n                                  \"Other\" = \"darkorange\"),\n                    name = \"Vulnerability Status\")+\n  labs(\n    title = \"Underserved Vulnerable Tracts in Pennsylvania\",\n    subtitle = \"Census Tracts with Limited Access to Hospitals\",\n    caption = \"Source: ACS 2022 5-Year Estimates\"\n  )+\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Levin_Hope_Assignment2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n**Requirements:** - Show underserved vulnerable tracts in a contrasting\ncolor - Include county boundaries for context - Show hospital\nlocations - Use appropriate visual hierarchy (what should stand out?) -\nInclude informative title and subtitle\n\n------------------------------------------------------------------------\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to\nhospitals for vulnerable populations.\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\nggplot(vulnerable_pop, aes(x = hospital_miles)) +\n         geom_histogram(bins = 15, fill = \"steelblue\", alpha = 0.7) +\n         labs(\n           title = \"Distribution of Distances to Nearest Hospital in Pennsylvania\",\n           subtitle = \"A clear disparity exists with some census tracts being 50+ miles from the nearest hospital\",\n           x = \"Distance to Nearest Hospital (mi)\",\n           y = \"Number of Tracts\",\n           caption = \"Source: ACS 2022 5-Year Estimates\"\n         )+\n         theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Levin_Hope_Assignment2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n**Suggested chart types:** - Histogram or density plot of distances -\nBox plot comparing distances across regions - Bar chart of underserved\ntracts by county - Scatter plot of distance vs. vulnerable population\nsize\n\n**Requirements:** - Clear axes labels with units - Appropriate title -\nProfessional formatting - Brief interpretation (1-2 sentences as a\ncaption or in text)\n\n------------------------------------------------------------------------\n\n## Part 3: Bring Your Own Data Analysis\n\nChoose your own additional spatial dataset and conduct a supplementary\nanalysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own\nresearch question using OpenDataPhilly data\n(https://opendataphilly.org/datasets/).\n\n**Note these are just loose suggestions to spark ideas - follow or make\nyour own as the data permits and as your ideas evolve. This analysis\nshould include bringing in your own dataset, ensuring the projection/CRS\nof your layers align and are appropriate for the analysis (not lat/long\nor geodetic coordinate systems). The analysis portion should include\nsome combination of spatial and attribute operations to answer a\nrelatively straightforward question**\n\n------------------------------------------------------------------------\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis** - **Data:** Schools,\nLibraries, Recreation Centers, Census tracts (child population) -\n**Question:** \"Which neighborhoods lack adequate educational\ninfrastructure for children?\" - **Operations:** Buffer schools/libraries\n(0.5 mile walking distance), identify coverage gaps, overlay with child\npopulation density - **Policy relevance:** School district planning,\nlibrary placement, after-school program siting\n\n**Option B: School Safety Zones** - **Data:** Schools, Crime Incidents,\nBike Network - **Question:** \"Are school zones safe for walking/biking,\nor are they crime hotspots?\" - **Operations:** Buffer schools (1000ft\nsafety zone), spatial join with crime incidents, assess bike\ninfrastructure coverage - **Policy relevance:** Safe Routes to School\nprograms, crossing guard placement\n\n------------------------------------------------------------------------\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** - **Data:** Parks, Street Trees, Census\ntracts (race/income demographics) - **Question:** \"Do low-income and\nminority neighborhoods have equitable access to green space?\" -\n**Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree\ncanopy or park acreage per capita, compare by demographics - **Policy\nrelevance:** Climate resilience, environmental justice, urban forestry\ninvestment ---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources** - **Data:** Crime Incidents,\nRecreation Centers, Libraries, Street Lights - **Question:** \"Are\nhigh-crime areas underserved by community resources?\" - **Operations:**\nAggregate crime counts to census tracts or neighborhoods, count\ncommunity resources per area, spatial correlation analysis - **Policy\nrelevance:** Community investment, violence prevention strategies ---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility** - **Data:** Polling Places,\nSEPTA stops, Census tracts (elderly population, disability rates) -\n**Question:** \"Are polling places accessible for elderly and disabled\nvoters?\" - **Operations:** Buffer polling places and transit stops,\nidentify vulnerable populations, find areas lacking access - **Policy\nrelevance:** Voting rights, election infrastructure, ADA compliance\n\n------------------------------------------------------------------------\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health** - **Data:** Recreation\nCenters, Playgrounds, Parks, Census tracts (demographics) -\n**Question:** \"Is lack of recreation access associated with vulnerable\npopulations?\" - **Operations:** Calculate recreation facilities per\ncapita by neighborhood, buffer facilities for walking access, overlay\nwith demographic indicators - **Policy relevance:** Public health\ninvestment, recreation programming, obesity prevention\n\n------------------------------------------------------------------------\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage** - **Data:** Fire Stations, EMS\nstations, Population density, High-rise buildings - **Question:** \"Are\npopulation-dense areas adequately covered by emergency services?\" -\n**Operations:** Create service area buffers (5-minute drive = \\~2\nmiles), assess population coverage, identify gaps in high-density\nareas - **Policy relevance:** Emergency preparedness, station siting\ndecisions\n\n------------------------------------------------------------------------\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution** - **Data:** Public Art,\nMuseums, Historic sites/markers, Neighborhoods - **Question:** \"Do all\nneighborhoods have equitable access to cultural amenities?\" -\n**Operations:** Count cultural assets per neighborhood, normalize by\npopulation, compare distribution across demographic groups - **Policy\nrelevance:** Cultural equity, tourism, quality of life, neighborhood\nidentity\n\n------------------------------------------------------------------------\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/ - Most datasets\navailable as GeoJSON, Shapefile, or CSV with coordinates - Always check\nthe Metadata for a data dictionary of the fields.\n\n**Additional Sources:** - **Pennsylvania Open Data:**\nhttps://data.pa.gov/ - **Census Bureau (via tidycensus):** Demographics,\neconomic indicators, commute patterns - **TIGER/Line (via tigris):**\nGeographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with\nmultiple data layers. **If you are a beginner, choose something more\nmanageable that helps you understand the basics**\n\n**If you have a different idea:** Propose your own question! Just make\nsure: - You can access the spatial data - You can perform at least 2\nspatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1.  **Find and load additional data**\n    -   Document your data source\n    -   Check and standardize the CRS\n    -   Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\nschools <- st_read(\"step_7_data/Schools.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Schools' from data source \n  `/Users/hope/Documents/GitHub/portfolio-setup-hlevin13/assignments/lab_2/step_7_data/Schools.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 495 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2665 ymin: 39.90781 xmax: -74.97057 ymax: 40.12974\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n  # OpenDataPhilly: unknown\n\ncrime <- st_read(\"step_7_data/crime_2022/incidents_part1_part2.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `incidents_part1_part2' from data source \n  `/Users/hope/Documents/GitHub/portfolio-setup-hlevin13/assignments/lab_2/step_7_data/crime_2022/incidents_part1_part2.shp' \n  using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 151197 features and 13 fields (with 890 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2753 ymin: 39.87731 xmax: -74.95981 ymax: 40.13646\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n  # OpenDataPhilly; 2022\n\nschools <- st_transform(schools, crs = 3365)\ncrime <- st_transform(crime, crs = 3365)\n\nsummary(schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      aun              school_num   location_id        school_name       \n Min.   :100510000   Min.   :3445   Length:495         Length:495        \n 1st Qu.:126515001   1st Qu.:3752   Class :character   Class :character  \n Median :126515001   Median :6527   Mode  :character   Mode  :character  \n Mean   :163032553   Mean   :5776                                        \n 3rd Qu.:226511157   3rd Qu.:7664                                        \n Max.   :326517786   Max.   :8493                                        \n NA's   :51          NA's   :208                                         \n school_name_label  street_address       zip_code         phone_number      \n Length:495         Length:495         Length:495         Length:495        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n grade_level         grade_org           enrollment          type      \n Length:495         Length:495         Min.   :   1.0   Min.   :1.000  \n Class :character   Class :character   1st Qu.: 270.0   1st Qu.:1.000  \n Mode  :character   Mode  :character   Median : 446.0   Median :1.000  \n                                       Mean   : 548.5   Mean   :1.768  \n                                       3rd Qu.: 656.0   3rd Qu.:3.000  \n                                       Max.   :3467.0   Max.   :3.000  \n                                       NA's   :162                     \n type_specific         objectid              geometry  \n Length:495         Min.   :  1.0   POINT        :495  \n Class :character   1st Qu.:124.5   epsg:3365    :  0  \n Mode  :character   Median :248.0   +proj=lcc ...:  0  \n                    Mean   :248.0                      \n                    3rd Qu.:371.5                      \n                    Max.   :495.0                      \n                                                       \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    objectid          dc_dist              psa              dispatch_d        \n Min.   :  155179   Length:151197      Length:151197      Min.   :2022-01-01  \n 1st Qu.:  197137   Class :character   Class :character   1st Qu.:2022-04-13  \n Median : 1125907   Mode  :character   Mode  :character   Median :2022-07-10  \n Mean   :  973124                                         Mean   :2022-07-07  \n 3rd Qu.: 1167711                                         3rd Qu.:2022-10-03  \n Max.   :32643386                                         Max.   :2022-12-31  \n                                                                              \n  dispatch_1         dispatch_t             hour           dc_key         \n Length:151197      Length:151197      Min.   : 0.00   Min.   :2.010e+11  \n Class :character   Class :character   1st Qu.:10.00   1st Qu.:2.022e+11  \n Mode  :character   Mode  :character   Median :14.00   Median :2.022e+11  \n                                       Mean   :13.31   Mean   :2.022e+11  \n                                       3rd Qu.:18.00   3rd Qu.:2.022e+11  \n                                       Max.   :23.00   Max.   :2.023e+11  \n                                       NA's   :2                          \n  location_b         ucr_genera         text_gener           point_x      \n Length:151197      Length:151197      Length:151197      Min.   :-75.28  \n Class :character   Class :character   Class :character   1st Qu.:-75.19  \n Mode  :character   Mode  :character   Mode  :character   Median :-75.16  \n                                                          Mean   :-75.15  \n                                                          3rd Qu.:-75.12  \n                                                          Max.   :-74.96  \n                                                          NA's   :890     \n    point_y               geometry     \n Min.   :39.88   POINT        :151197  \n 1st Qu.:39.96   epsg:3365    :     0  \n Median :39.99   +proj=lcc ...:     0  \n Mean   :39.99                         \n 3rd Qu.:40.03                         \n Max.   :40.14                         \n NA's   :890                           \n```\n\n\n:::\n:::\n\n\n**Questions to answer:** - What dataset did you choose and why? - I\nchose to focus on the school safety zones, because I live near a school\nand was curious about the chance of them being crime hotspots! - What is\nthe data source and date? - Everything was sourced from OpenDataPhilly.\nI was unable to find the sourcing date for the school data, however, the\ncrime data comes from 2022 (wanted to match it with the ACS data I\npulled earlier). - How many features does it contain? - There are 2\nfeatures. - What CRS is it in? Did you need to transform it? - I\ntransformed everything to be in NAD83 Pennsylvania South.\n\n------------------------------------------------------------------------\n\n2.  **Pose a research question**\n\nWrite a clear research statement that your analysis will answer.\n\n**Examples:** - \"Do vulnerable tracts have adequate public transit\naccess to hospitals?\" - \"Are EMS stations appropriately located near\nvulnerable populations?\" - \"Do areas with low vehicle access have worse\nhospital access?\"\n\n\"How much crimes occurs near Philadelphia schools?\"\n\n------------------------------------------------------------------------\n\n3.  **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):** - Buffers - Spatial joins - Spatial\nfiltering with predicates - Distance calculations - Intersections or\nunions - Point-in-polygon aggregation\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your spatial analysis\n\n# Set CRS\nschools <- st_transform(schools, crs = 3365)\ncrime <- st_transform(crime, crs = 3365)\n\n# Create 1000ft buffers around each school to represent the safety zones\nschool_buffer <- schools %>%\n  st_buffer (dist = 1000) %>%\n  st_union() %>%\n  st_as_sf()\n\n# Determine crimes within buffers/safety zones\ncrime_near_school <- st_join(\n  crime, school_buffer,\n  join = st_within, left = FALSE\n)\n\n# Count total crimes and the number that happened near schools\ncrime_total <- nrow(crime)\ncrime_schoolzone <- nrow(crime_near_school)\n\n# Find percent of crimes near schools\ncrime_percent <- round((crime_schoolzone / crime_total) *100, 2)\n\n# Results\ncat(\"Total Crimes:\", crime_total, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTotal Crimes: 151197 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Crimes within 1000ft of schools:\", crime_schoolzone, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCrimes within 1000ft of schools: 74198 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Percent of crimes within 1000ft of schools:\", crime_percent, \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPercent of crimes within 1000ft of schools: 49.07 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Map\nggplot() +\n  geom_sf(data = crime,\n          color = \"tomato\",\n          size = .5,\n          alpha = .1) +\n   geom_sf(data = school_buffer,\n          fill = \"navyblue\",\n          alpha = .8) +\n  geom_sf(data = schools,\n          color = \"deepskyblue3\",\n          size = 1) +\n  labs(\n    title = \"School Safety Zones and Crime in Philadelphia, PA\",\n    subtitle = \"1000ft Safety Buffer Around Schools and Locations of Crime\",\n    caption = \"Source: OpenDataPhilly\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Levin_Hope_Assignment2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n**Analysis requirements:** - Clear code comments explaining each step -\nAppropriate CRS transformations - Summary statistics or counts - At\nleast one map showing your findings - Brief interpretation of results\n(3-5 sentences)\n\n**Your interpretation:**\n\nTotal Crimes: 151,197 Crimes Within 1000ft of schools: 74,198 Percent of\nCrimes Within 1000ft of Schools: 49.07%\n\nConsidering 49% of crimes occur within 1000ft of schools, there is a\nclear need for additional measures to ensure that Philadelphia's youth\nare kept safe. If speeding is an issue, then perhaps crossing guards can\nbe kept on for additional hours or in farther places. If its a bigger\nissue - like murder or drug trafficking - then police presence! However,\nbecause the dataset does not report the type of crime committed, further\ninvestigation is needed to determine what is needed.\n\n## Finally - A few comments about your incorporation of feedback!\n\nTake a few moments to clean up your markdown document and then write a\nline or two or three about how you may have incorporated feedback that\nyou recieved after your first assignment.\n\nHopefully I hid my API key this time! I've run into a few issues with\nthat... from GitHub emailing me about it being available for anyone to\naccess to Zhanchao alerting me on my last assignment.\n\n------------------------------------------------------------------------\n\n## Submission Requirements\n\n**What to submit:**\n\n1.  **Rendered HTML document posted to your course portfolio** with all\n    code, outputs, maps, and text\n    -   Use `embed-resources: true` in YAML so it's a single file\n    -   All code should run without errors\n    -   All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and\n`LastName_FirstName_Assignment2.qmd`\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "Levin_Hope_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}