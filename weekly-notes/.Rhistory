title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = people)
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = dollar)
View(test_data)
View(income_not_family)
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = people)
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = null)
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = name)
ggplot(county_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = person)
View(demo_data)
View(county_data)
ggplot(demo_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = people)
ggplot(demo_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
ggplot(demo_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = county)
ggplot(demo_data) +
aes(x = top_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population Distribution Across PA Counties",
x = "Total Population",
y = "Counties"
) +
theme_minimal() +
scale_x_continuous(labels = name)
ggplot(county_data) +
aes(x = median_incomeE) +
geom_histogram(bins = 25, fill = "deeppink", alpha = 0.5) +
labs(
title = "Distribution of Median Household Income",
x = "Median Household Income ($)",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = dollar)
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population",
x = "X",
y = "Y"
) +
theme_minimal() +
scale_x_continuous(labels = X)
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population",
x = "Count of People",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = dollars)
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population",
x = "Count of People",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = dollar)
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population",
x = "Count of People",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 25, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population",
x = "Count of People",
y = "Number of Counties"
) +
theme_minimal()
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "orchid", alpha = 0.5) +
labs(
title = "Total Population in PA",
x = "Count of People",
y = "Counties"
) +
theme_minimal()
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7, color = "blue") +
geom_smooth(method = "lm", se = TRUE, color = "red") + #se means standard error shading around
labs(
title = "Population vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Total Population",
y = "Median Household Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
correlation <- cor(county_data$total_popE, county_data$median_incomeE, use = "complete.obs")
print(paste("Correlation coefficient:", round(correlation, 3)))
ggplot(county_data) +
aes(x = log(total_popE), y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE) +
labs(
title = "Log(Population) vs Median Income",
x = "Log(Total Population)",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_y_continuous(labels = dollar)
ggplot(county_data) +
aes(x = median_ageE, y = median_incomeE) +
geom_point(alpha = 0.5, color = "red") +
geom_smooth(method = "loess", se = TRUE, color = "blue") + #se means standard error shading around
labs(
title = "Age vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Median Age",
y = "Median Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_dark() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
county_reliability <- county_data %>%
mutate(
income_moe_pct = (median_incomeM / median_incomeE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
ggplot(county_reliability) +
aes(x = total_popE, y = income_moe_pct) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 10, color = "red", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Red line = 10% reliability threshold"
) +
theme_minimal() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = income_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
county_median_age <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100,
)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color = "purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Median Age Margin of Error (%)",
caption = "Red line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color = "purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color = "purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
scale_y_continuous(labels = percent)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category) + # fill should vary based on category - randomly assigns
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) + # fill should vary based on category - randomly assigns
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
county_median_age <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) + # fill should vary based on category - randomly assigns
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category)) + # fill should vary based on category - randomly assigns
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category) + # fill should vary based on category - randomly assigns
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
scale_x_continuous(labels = comma)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category) + # fill should vary based on category - randomly assigns
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
scale_x_continuous(labels = comma)
county_median_age <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color = "purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
scale_y_continuous(labels = percent)
ggplot(county_median_age) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
scale_x_continuous(labels = comma)
county_reliability <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color = "purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
scale_y_continuous(labels = percent)
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Reliability of Median Age Across Counties",
x = "Total Population",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")
scale_x_continuous(labels = comma)
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE, color = median_ageE) +
geom_point(size = 2, alpha = 0.7) +
scale_color_viridis_c(name = "Median\nAge") +
labs(
title = "Population, Income, and Age Patterns",
x = "Total Population",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
ounty_faceted <- county_data %>%
mutate(
age_category = case_when(
median_ageE < 40 ~ "Young (< 40)",
median_ageE < 45 ~ "Middle-aged (40-45)",
TRUE ~ "Older (45+)"
)
)
ggplot(county_faceted) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~age_category) +
labs(
title = "Population-Income Relationship by Age Profile",
x = "Total Population",
y = "Median Income ($)"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
view(county_faceted)
county_faceted <- county_data %>%
mutate(
age_category = case_when(
median_ageE < 40 ~ "Young (< 40)",
median_ageE < 45 ~ "Middle-aged (40-45)",
TRUE ~ "Older (45+)"
)
)
view(county_faceted)
ggplot(county_faceted) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~age_category) + # ~ creates a separate plot : BY ...
labs(
title = "Population-Income Relationship by Age Profile",
x = "Total Population",
y = "Median Income ($)"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Get educational attainment data
education_data <- get_acs(
geography = "county",
variables = c(
total_25plus = "B15003_001",    # Total population 25 years and over
bachelor_plus = "B15003_022"    # Bachelor's degree or higher
),
state = state_choice,
year = 2022,
output = "wide"
) %>%
mutate(
pct_college = (bachelor_plusE / total_25plusE) * 100,
county_name = str_remove(NAME, paste0(", ", state_choice))
) %>%
select(GEOID, county_name, pct_college)
# Check the data
head(education_data)
combined_data <- county_data %>%
left_join(education_data, by = "GEOID")
cat("Original data rows:", nrow(county_data), "\n")
cat("Combined data rows:", nrow(combined_data), "\n")
cat("Missing education data:", sum(is.na(combined_data$pct_college)), "\n")
# View the combined data
head(combined_data)
ggplot(combined_data) +
aes(x = pct_college, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE) +
labs(
title = "Education vs Income Across Counties",
x = "Percent with Bachelor's Degree or Higher",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_y_continuous(labels = dollar)
edu_income_cor <- cor(combined_data$pct_college, combined_data$median_incomeE, use = "complete.obs")
print(paste("Education-Income Correlation:", round(edu_income_cor, 3)))
